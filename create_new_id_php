<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create New Client ID</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.1.1/css/all.min.css">
    <style>
        body {
            background-color: #f5f7fa;
        }
        .form-control:focus {
            border-color: #3b82f6;
            box-shadow: 0 0 0 0.2rem rgba(59, 130, 246, 0.25);
        }
        .required-field::after {
            content: "*";
            color: red;
            margin-left: 4px;
        }
    </style>
</head>
<body class="bg-gray-50">
    <div class="container mx-auto px-4 py-8">
        <div class="bg-white shadow-md rounded-lg overflow-hidden max-w-4xl mx-auto">
            <div class="bg-blue-600 text-white px-6 py-4 flex items-center">
                <i class="fas fa-user-plus text-2xl mr-3"></i>
                <h1 class="text-xl font-bold">Create New Client ID</h1>
            </div>
            
            <!-- Alerts for form submission -->
            <div id="successAlert" class="hidden bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4 mx-6 mt-4" role="alert">
                <strong class="font-bold">Success!</strong>
                <span class="block sm:inline">New client ID has been created successfully.</span>
            </div>
            
            <div id="errorAlert" class="hidden bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4 mx-6 mt-4" role="alert">
                <strong class="font-bold">Error!</strong>
                <span class="block sm:inline">Please fix the errors below and try again.</span>
            </div>
            
            <form id="newClientForm" class="px-6 py-4" method="post" action="save_new_client.php">
                <div class="bg-blue-50 p-4 mb-6 rounded-md">
                    <p class="text-blue-800"><i class="fas fa-info-circle mr-2"></i>Create a new client ID that will be added to the master client list. Fields marked with <span class="text-red-500">*</span> are required.</p>
                </div>
                
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <!-- Client ID/Name -->
                    <div class="mb-4">
                        <label for="client_id_name" class="block text-gray-700 font-semibold mb-2 required-field">Client ID/Name</label>
                        <input type="text" id="client_id_name" name="client_id_name" class="form-control w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none" placeholder="Enter unique client ID or name" required>
                        <p class="text-gray-500 text-sm mt-1">This will be used for identification in Google Sheets</p>
                    </div>
                    
                    <!-- Mobile Number -->
                    <div class="mb-4">
                        <label for="mobile_number" class="block text-gray-700 font-semibold mb-2 required-field">Mobile Number</label>
                        <input type="text" id="mobile_number" name="mobile_number" class="form-control w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none" placeholder="Enter mobile number" required>
                        <p class="text-gray-500 text-sm mt-1">Format: +91XXXXXXXXXX or XXXXXXXXXX</p>
                    </div>
                    
                    <!-- Initial Deposit Amount -->
                    <div class="mb-4">
                        <label for="deposit_amount" class="block text-gray-700 font-semibold mb-2">Initial Deposit Amount (â‚¹)</label>
                        <input type="number" id="deposit_amount" name="deposit_amount" class="form-control w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none" placeholder="Enter deposit amount">
                        <p class="text-gray-500 text-sm mt-1">System will auto-assign deposit tag based on amount</p>
                    </div>
                    
                    <!-- Deposit Tag (Auto-calculated) -->
                    <div class="mb-4">
                        <label for="deposit_tag" class="block text-gray-700 font-semibold mb-2">Deposit Tag</label>
                        <input type="text" id="deposit_tag" name="deposit_tag" class="form-control w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-100 focus:outline-none" readonly>
                        <p class="text-gray-500 text-sm mt-1">Auto-assigned based on deposit amount</p>
                    </div>
                    
                    <!-- Additional Notes -->
                    <div class="mb-4 md:col-span-2">
                        <label for="notes" class="block text-gray-700 font-semibold mb-2">Additional Notes</label>
                        <textarea id="notes" name="notes" rows="3" class="form-control w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none" placeholder="Enter any additional information about this client"></textarea>
                    </div>
                </div>
                
                <div class="border-t border-gray-200 pt-4 mt-4">
                    <h3 class="text-gray-700 font-semibold mb-3">Initial Follow-up Status</h3>
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                        <div class="flex items-center">
                            <input type="radio" id="status_new" name="initial_status" value="new" class="h-4 w-4 text-blue-600 border-gray-300" checked>
                            <label for="status_new" class="ml-2 text-gray-700">New ID Created</label>
                        </div>
                        <div class="flex items-center">
                            <input type="radio" id="status_call_done" name="initial_status" value="call_done" class="h-4 w-4 text-blue-600 border-gray-300">
                            <label for="status_call_done" class="ml-2 text-gray-700">Call Done</label>
                        </div>
                        <div class="flex items-center">
                            <input type="radio" id="status_other" name="initial_status" value="other" class="h-4 w-4 text-blue-600 border-gray-300">
                            <label for="status_other" class="ml-2 text-gray-700">Other</label>
                        </div>
                    </div>
                </div>
                
                <div id="remarkSection" class="border-t border-gray-200 pt-4 mt-4">
                    <label for="remark" class="block text-gray-700 font-semibold mb-2">Remark</label>
                    <textarea id="remark" name="remark" rows="2" class="form-control w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none" placeholder="Enter remarks about this new ID"></textarea>
                </div>
                
                <div class="flex flex-wrap justify-end space-x-2 pt-6">
                    <button type="button" id="clearBtn" class="px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 focus:outline-none">
                        <i class="fas fa-eraser mr-1"></i> Clear Form
                    </button>
                    <button type="button" id="checkExistingBtn" class="px-4 py-2 bg-yellow-500 text-white rounded-md hover:bg-yellow-600 focus:outline-none">
                        <i class="fas fa-search mr-1"></i> Check Existing
                    </button>
                    <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none">
                        <i class="fas fa-save mr-1"></i> Create Client ID
                    </button>
                </div>
            </form>
        </div>
        
        <div id="existingClientModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4">
            <div class="bg-white rounded-lg shadow-lg max-w-2xl w-full">
                <div class="flex justify-between items-center bg-blue-600 text-white px-6 py-3 rounded-t-lg">
                    <h3 class="font-bold">Similar Existing Clients</h3>
                    <button id="closeModalBtn" class="text-white hover:text-gray-200 focus:outline-none">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
                <div class="p-6">
                    <div class="mb-4">
                        <p class="text-gray-700">The following similar clients were found in the database:</p>
                    </div>
                    <div class="overflow-auto max-h-60">
                        <table class="min-w-full divide-y divide-gray-200">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Client ID/Name</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Mobile Number</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Deposit</th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200" id="similarClientsTable">
                                <!-- Similar clients will be displayed here -->
                            </tbody>
                        </table>
                    </div>
                    <div class="flex justify-end mt-6 space-x-2">
                        <button id="proceedAnywayBtn" class="px-4 py-2 bg-yellow-500 text-white rounded hover:bg-yellow-600 focus:outline-none">
                            <i class="fas fa-exclamation-triangle mr-1"></i> Proceed Anyway
                        </button>
                        <button id="cancelCreateBtn" class="px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600 focus:outline-none">
                            <i class="fas fa-times mr-1"></i> Cancel
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Update deposit tag based on amount
        document.getElementById('deposit_amount').addEventListener('input', function() {
            const amount = parseInt(this.value) || 0;
            const depositTagElement = document.getElementById('deposit_tag');
            
            if (amount < 5000) {
                depositTagElement.value = "Under 5K";
            } else if (amount < 10000) {
                depositTagElement.value = "Under 10K";
            } else if (amount < 15000) {
                depositTagElement.value = "Under 15K";
            } else if (amount < 20000) {
                depositTagElement.value = "Under 20K";
            } else if (amount < 30000) {
                depositTagElement.value = "Under 30K";
            } else if (amount < 50000) {
                depositTagElement.value = "Under 50K";
            } else {
                depositTagElement.value = "More than 50K";
            }
        });

        // Clear form
        document.getElementById('clearBtn').addEventListener('click', function() {
            document.getElementById('newClientForm').reset();
            document.getElementById('deposit_tag').value = '';
        });

        // Mock similar clients data (in a real implementation, this would come from the server)
        const mockSimilarClients = [
            { id: 'JOHN123', mobile: '9876543210', deposit: 'â‚¹12,500', tag: 'Under 15K' },
            { id: 'JOHN_G', mobile: '9876543211', deposit: 'â‚¹8,000', tag: 'Under 10K' },
            { id: 'JOHNNY', mobile: '9876543212', deposit: 'â‚¹20,000', tag: 'Under 30K' }
        ];

        // Check for existing similar clients
        document.getElementById('checkExistingBtn').addEventListener('click', function() {
            const clientId = document.getElementById('client_id_name').value.trim();
            
            if (clientId.length === 0) {
                alert('Please enter a client ID/name first');
                return;
            }
            
            // In a real implementation, you would make an AJAX call to the server
            // For this mock, we'll just show the modal with sample data
            const similarClientsTable = document.getElementById('similarClientsTable');
            similarClientsTable.innerHTML = '';
            
            mockSimilarClients.forEach(client => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">${client.id}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${client.mobile}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${client.deposit} <span class="inline-block ml-1 px-2 py-1 text-xs font-semibold rounded-full ${getTagColor(client.tag)}">${client.tag}</span></td>
                `;
                similarClientsTable.appendChild(row);
            });
            
            document.getElementById('existingClientModal').classList.remove('hidden');
        });

        // Helper function to get tag color
        function getTagColor(tag) {
            switch(tag) {
                case 'Under 5K': return 'bg-gray-100 text-gray-800';
                case 'Under 10K': return 'bg-blue-100 text-blue-800';
                case 'Under 15K': return 'bg-green-100 text-green-800';
                case 'Under 20K': return 'bg-yellow-100 text-yellow-800';
                case 'Under 30K': return 'bg-orange-100 text-orange-800';
                case 'Under 50K': return 'bg-purple-100 text-purple-800';
                case 'More than 50K': return 'bg-red-100 text-red-800';
                default: return 'bg-gray-100 text-gray-800';
            }
        }

        // Close modal
        document.getElementById('closeModalBtn').addEventListener('click', function() {
            document.getElementById('existingClientModal').classList.add('hidden');
        });

        document.getElementById('cancelCreateBtn').addEventListener('click', function() {
            document.getElementById('existingClientModal').classList.add('hidden');
        });

        document.getElementById('proceedAnywayBtn').addEventListener('click', function() {
            document.getElementById('existingClientModal').classList.add('hidden');
            // Here you could add logic to proceed with form submission
        });

        // Form submission handler
        document.getElementById('newClientForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            // Validate form
            const clientId = document.getElementById('client_id_name').value.trim();
            const mobileNumber = document.getElementById('mobile_number').value.trim();
            
            if (clientId.length === 0 || mobileNumber.length === 0) {
                document.getElementById('errorAlert').classList.remove('hidden');
                setTimeout(() => {
                    document.getElementById('errorAlert').classList.add('hidden');
                }, 3000);
                return;
            }
            
            // In a real implementation, you would submit the form via AJAX
            // For this demo, we'll just show the success message
            document.getElementById('successAlert').classList.remove('hidden');
            setTimeout(() => {
                document.getElementById('successAlert').classList.add('hidden');
                document.getElementById('newClientForm').reset();
                document.getElementById('deposit_tag').value = '';
            }, 3000);
        });
    </script>
</body>
</html>
